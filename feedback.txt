Lab 6 Feedback
86

-2 Do not use a while loop to RoundUp/RoundDown

-3 I don't understand why cVarExprNode::AttributesToString has a rows.pop_back(). If you called AttributesToString multiple times, would your row sizes disappear?

-5 your build had compiler warnings

-2 Did not RoundUp the block size for programs

-2 You do not correctly compute the size of params for function calls with const args:
    foo(1,2);

***********************************

Lab 5 Feedback

116

-14 cFuncDeclNode included instance variables for storing something in the m_children array. cFuncExprNode contained an instance variable for something derived from the m_children array.

-3 You allowed some details of the cParamsNode to leak into your cFuncDeclNode.

-5 Did not implement type promotion in cBinaryExprNode. In fact, did not implement GetType at all.

-2 You don't recognize functions in an inner scope as being different from declaration in outer scopes

-2 Gave the error "Cannot assign int to int", which makes no sense

-2 Your cBaseTypeNode always returned true for IsInt and IsChar

-2 Did not always detect function decls with different number of args

-2 Did not report "var not defined" for arguments to function calls.

-2 You had at least some of your type mismatch error messages backwards

-5 Did not report "is not an array" errors

-5 Did not report "index is not an int" errors

-2 Erroneously reported "called with incompatible arguments" even when the types matched.

-3 One of my other tests segfaulted, but I didn't investigate the cause.

*******************************************

Lab 4 Feedback

145

-1 cFuncDeclNode::Insert adds no functionality above AddChild, so you might as well just call AddChild.

-1 Some of your indentation was way off. I suspect it's because you have mixed spaces and tabs. You should convert to all spaces (there's a linux utility that will do it for you).

-3 Your cFuncDeclNode implementation will make it hard to write getters for all the parts. For example, where are the statements? in m_children[2], [3], or [4]?

********************************************

Lab 3 Feedback

86

-1 DecreaseScope should make sure the list isn't empty prior to the pop()

-13 You did not implement the global lookup as required by the write-up. You also do not have a local lookup visible in cSymbolTable as required by the write-up.

****************************************

Lab1 Feedback

95

-5 Late. Your git repository indicates you finished on time, so I'm not taking the full late penalty.

Your git repository contains object files, etc. It should only contain source files.
